{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_EDIT_REQUEST, PRODUCT_EDIT_SUCCESS, PRODUCT_EDIT_FAIL, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_REQUEST } from \"../Constants/ProductConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\"; //All Products\n\nexport const listProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/products/all`, config);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: message\n    });\n  }\n}; //Delete Product\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n}; //Create Product\n\nexport const createProduct = (name, price, description, image, countInStock) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products`, {\n      name,\n      price,\n      description,\n      image,\n      countInStock\n    }, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; // SINGLE PRODUCT\n\nexport const editProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_EDIT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_EDIT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //Update Product\n\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: PRODUCT_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/mhdtech5/Desktop/MERN_STACK_Ecommerce/vegetables/admin-dashboard/src/Redux/Actions/ProductActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_EDIT_REQUEST","PRODUCT_EDIT_SUCCESS","PRODUCT_EDIT_FAIL","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_REQUEST","axios","logout","listProducts","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","deleteProduct","id","delete","createProduct","name","price","description","image","countInStock","post","editProduct","updateProduct","product","put","_id"],"mappings":"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","sourcesContent":["import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_EDIT_REQUEST,\n  PRODUCT_EDIT_SUCCESS,\n  PRODUCT_EDIT_FAIL,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n} from \"../Constants/ProductConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\n\n//All Products\nexport const listProducts = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/products/all`, config);\n\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\n//Delete Product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n//Create Product\nexport const createProduct =\n  (name, price, description, image, countInStock) =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        `/api/products`,\n        { name, price, description, image, countInStock },\n        config\n      );\n\n      dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Not authorized, token failed\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: PRODUCT_CREATE_FAIL,\n        payload: message,\n      });\n    }\n  };\n\n// SINGLE PRODUCT\nexport const editProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_EDIT_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({ type: PRODUCT_EDIT_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_EDIT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//Update Product\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    dispatch({ type: PRODUCT_EDIT_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}